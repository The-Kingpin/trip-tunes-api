plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "3.4.0"
}

group = 'com.code-harbor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'

    implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.2'

//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:2.7.0'
//    implementation 'org.springframework.security:spring-security-oauth2-jose:5.7.1'

//    implementation 'org.keycloak:keycloak-spring-boot-starter:18.0.0'
//    implementation 'org.keycloak.bom:keycloak-adapter-bom:18.0.0'

    implementation 'org.modelmapper:modelmapper:3.1.0'

    //Swagger dependencies
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-data-rest', version: '3.0.0'

    //JavaX
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    implementation group: 'org.json', name: 'json', version: '20220320'

    runtimeOnly 'com.h2database:h2:2.1.214'
    runtimeOnly 'org.postgresql:postgresql:42.3.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.2'
}

test {
    useJUnitPlatform()
}

node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = true

    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "16.16.0"

    // Version of npm to use
    // If specified, installs it in the npmWorkDir
    // If empty, the plugin will use the npm command bundled with Node.js
    npmVersion = "8.11.0"

    // Version of Yarn to use
    // Any Yarn task first installs Yarn in the yarnWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    yarnVersion = "1.22.19"

    // Base URL for fetching node distributions
    // Only used if download is true
    // Change it if you want to use a mirror
    // Or set to null if you want to add the repository on your own.
    distBaseUrl = "https://nodejs.org/dist"

    // Specifies whether it is acceptable to communicate with the Node.js repository over an insecure HTTP connection.
    // Only used if download is true
    // Change it to true if you use a mirror that uses HTTP rather than HTTPS
    // Or set to null if you want to use Gradle's default behaviour.
    allowInsecureProtocol = null

    // The npm command executed by the npmInstall task
    // By default it is install but it can be changed to ci
    npmInstallCommand = "install"

    // The directory where Node.js is unpacked (when download is true)
    workDir = file("${project.projectDir}/.gradle/nodejs")

    // The directory where npm is installed (when a specific version is defined)
    npmWorkDir = file("${project.projectDir}/.gradle/npm")

    // The directory where yarn is installed (when a Yarn task is used)
    yarnWorkDir = file("${project.projectDir}/.gradle/yarn")

    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file("${project.projectDir}/ui-react")

    // Whether the plugin automatically should add the proxy configuration to npm and yarn commands
    // according the proxy configuration defined for Gradle
    // Disable this option if you want to configure the proxy for npm or yarn on your own
    // (in the .npmrc file for instance)
    nodeProxySettings = ProxySettings.SMART
}

task clearStaticFolder(type: Delete) {
    delete "${project.projectDir}/src/main/resources/static/"
}

task yarnBuild(type: YarnTask) {
    dependsOn clearStaticFolder
    dependsOn yarn
    args = ['build']
}

task copyUI(type: Copy) {
    dependsOn yarnBuild
    from "${project.projectDir}/ui-react/build/"
    into "${project.projectDir}/src/main/resources/static"
}

processResources {
    dependsOn copyUI;
}